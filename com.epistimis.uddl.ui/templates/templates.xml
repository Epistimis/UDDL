<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates>

<template id = "1" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalAffineConversion" deleted="false" description="An AffineConversion is a relationship between two ConvertibleElements in the form mx+b" enabled="true" name="ACONV">aconv ${name} "${description}" {
	${source:CrossReference(LogicalAssociation.source)} -(
		${conversionFactor}, ${offset}
	)-&gt; ${destination:CrossReference(LogicalAssociation.destination)}	
};
${cursor}
</template>

<template id = "2" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformArray" deleted="false" description="An Array is used to represent an array of Octets. This can be used to realize a StandardMeasurementSystem." enabled="true" name="ARR">arr [ ${size} ] ${name} "${description}" -&gt; ${realizes:CrossReference(LogicalElement.realizes)};
${cursor}
 </template>

<template id = "3" autoinsert="true" context="com.epistimis.uddl.Uddl.ConceptualBasisEntity" deleted="false" description="A BasisEntity represents a unique domain concept and establishes a basis which can be used by conceptual Entities." enabled="true" name="BASIS">basis ${name} "${description}" ;
${cursor}
</template>

<template id = "4" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalBoolean" deleted="false" description="A Boolean is a value type representing the two values TRUE and FALSE." enabled="true" name="BOOL">bool ${name} "${description}" ;
${cursor}
</template>

<template id = "5" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformBoolean" deleted="false" description="A Boolean is a data type that represents the values TRUE and FALSE." enabled="true" name="BOOL">bool ${name}	"${description}" -&gt; ${realizes:CrossReference(LogicalElement.realizes)};
 ${cursor}
  </template>

<template id = "5" autoinsert="true" context="com.epistimis.uddl.Uddl.ConceptualAssociation" deleted="false" description="A conceptual Association represents a relationship between two or more conceptual Entities. The conceptual Entities participating in the conceptual Association may be specified locally or in its generalized types. In addition, there may be one or more conceptual ComposableElements that characterize the relationship. Conceptual Associations are conceptual Entities that may also participate in other conceptual Associations." enabled="true" name="CASSOC">cassoc ${name} "${description}"  {
 	${cursor}
 };
 
</template>

<template id = "6" autoinsert="true" context="com.epistimis.uddl.Uddl.ConceptualCompositeQuery" deleted="false" description="A conceptual CompositeQuery is a collection of two or more conceptual Views. The “isUnion” attribute specifies whether the composed Views are intended to be mutually exclusive or not." enabled="true" name="CCQUERY">ccquery ${name} "${description}" {
	isUnion
	${cursor}

};</template>

<template id = "7" autoinsert="true" context="com.epistimis.uddl.Uddl.ConceptualDataModel" deleted="false" description="A ConceptualDataModel is a container for CDM Elements." enabled="true" name="CDM">cdm ${name}  "${description}"  {
	${cursor}
}</template>

<template id = "8" autoinsert="true" context="com.epistimis.uddl.Uddl.ConceptualEntity" deleted="false" description="A conceptual Entity represents a domain concept in terms of its Observables and other composed conceptual Entities. Since a conceptual Entity is built only from conceptual ComposableElements, it is independent of any specific data representation, units, or reference frame." enabled="true" name="CENTITY">centity ${name} "${description}" :
${specializes:CrossReference(ConceptualEntity.specializes)}
{
	${cursor}	
};

	</template>
	
	<template id = "9" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalCharacter" deleted="false" description="A Character is a value type representing characters from any character set." enabled="true" name="CHAR">char ${name} "${description}" ;
	${cursor}
	</template>
	
	<template id = "57" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformCharType" deleted="false" description="A Char is a data type that represents characters from any single byte character set." enabled="true" name="CHAR">char ${name} "${description}" -&gt; ${realizes:CrossReference(LogicalElement.realizes)};
	${cursor}
	</template>
 
 <template id = "58" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalConversion" deleted="false" description="A Conversion is a relationship between two ConvertibleElements that describes how to transform measured quantities between two Units." enabled="true" name="CONV">conv ${name} "${description}" {
${source:CrossReference(LogicalAssociation.source)} -&gt;
${destination:CrossReference(LogicalAssociation.destination)}
 };
	
${cursor}
</template>

<template id = "10" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalCoordinateSystem" deleted="false" description="A CoordinateSystem is a system which uses one or more coordinates to uniquely determine the position of a point in an N-dimensional space. The coordinate system is comprised of multiple CoordinateSystemAxis which completely span the space. Coordinates are quantified relative to the CoordinateSystemAxis. It is not required that the dimensions be ordered or continuous." enabled="true" name="COORD">coord ${name} "${description}" {
	axis: $"{axisRelationshipDescription}"
	angleEq: $"{angleEquation}"
	distanceEq: $"{distanceEquation}"
	[
	${cursor}
	]
};</template>

<template id = "11" autoinsert="true" context="com.epistimis.uddl.Uddl.ConceptualQuery" deleted="false" description="A conceptual Query is a specification that defines the content of conceptual View as a set of conceptual Characteristics projected from a selected set of related conceptual Entities. The “specification” attribute captures the specification of a Query as defined by the Query grammar." enabled="true" name="CQUERY">cquery ${name} "${description}" { 
	spec: "${specification}"
};
${cursor}
</template>

<template id = "12" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalCoordinateSystemAxis" deleted="false" description=" A CoordinateSystemAxis represents a dimension within a CoordinateSystem." enabled="true" name="CSA">csa	 ${name} "${description}" ;
${cursor}
</template>

<template id = "14" autoinsert="true" context="com.epistimis.uddl.Uddl.DataModel" deleted="false" description="A DataModel is a container for ConceptualDataModels, LogicalDataModels, and PlatformDataModels" enabled="true" name="DM">dm ${name} "${description}"  {
	
	${cursor}
	
}</template>

<template id = "13" autoinsert="true" context="com.epistimis.uddl.Uddl.ConceptualDomain" deleted="false" description="A Domain represents a space defined by a set of BasisEntities relating to well understood concepts by practitioners within a particular domain." enabled="true" name="DOMAIN">domain ${name} "${description}"  ;
${cursor}
</template>

<template id = "15" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformDouble" deleted="false" description="A Double is a real data type that represents an IEEE double precision floating-point number." enabled="true" name="DOUBLE">double	${name} "${description}" -&gt; ${realizes:CrossReference(LogicalElement.realizes)}; 
 ${cursor}
 </template>

<template id = "16" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalEnumerationConstraint" deleted="false" description="An EnumerationConstraint identifies a subset of enumerated values (EnumerationLabel) considered valid for an Enumerated value type of a MeasurementAxis." enabled="true" name="EC">ec  ${name} "${description}" [
${cursor}
] </template>

<template id = "17" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalEnumerated" deleted="false" description="An Enumerated is a value type representing a set of named values, each with specific meaning." enabled="true" name="ENUM">enum	${name} "${description}" 
stdRef: $"{standardReference}"[
${cursor}
];	
;</template>

<template id = "18" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformEnumeration" deleted="false" description=" An Enumeration is a data type that represents an ordered list of identifiers." enabled="true" name="ENUM">enum ${name} "${description}" -&gt; ${realizes:CrossReference(LogicalElement.realizes)};
${cursor}
</template>

<template id = "19" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformFloat" deleted="false" description="A Float is a real data type that represents an IEEE single precision floating-point number." enabled="true" name="FLOAT">float ${name} "${description}" -&gt;
 ${realizes:CrossReference(LogicalElement.realizes)};
 ${cursor}
 </template>

<template id = "20" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalFixedLengthStringConstraint" deleted="false" description="A FixedLengthStringConstraint specifies a defined set of meaningful values for a String of a specific fixed length. The “length” attribute defines the fixed length, an integer value greater than 0." enabled="true" name="FLSC">flsc ${name} [ ${length} ] "${description}";
${cursor}
</template>

<template id = "21" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalInteger" deleted="false" description="An Integer is a value type representing integer numbers." enabled="true" name="INT">int ${name} "${description}" ;
${cursor}
</template>

<template id = "22" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalIntegerRangeConstraint" deleted="false" description="An IntegerRangeConstraint specifies a defined range of meaningful values for an Integer or Natural. The “upperBound” is greater than or equal to the “lowerBound”. The defined range is inclusive of the “upperBound” and “lowerBound”. " enabled="true" name="IRC">irc ${name} [ ${lowerBound} : ${upperBound}]
"${description}" ;
${cursor}
</template>


<template id = "24" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalAssociation" deleted="false" description="A logical Association represents a relationship between two or more logical Entities. The logical Entities participating in the logical Association may be specified locally or in its generalized types. In addition, there may be one or more logical ComposableElements that characterize the relationship. Logical Associations are logical Entities that may also participate in other logical Associations." enabled="true" name="LASSOC">lassoc ${name} "${description}" : ${specializes:CrossReference(LogicalEntity.realizes)} -&gt; ${realizes:CrossReference(ConceptualEntity.realizes)}{
	${cursor}
};
 </template>
 
 <template id = "25" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalCompositeQuery" deleted="false" description="A logical CompositeQuery is a collection of two or more logical Views. The “isUnion” attribute specifies whether the composed Views are intended to be mutually exclusive or not." enabled="true" name="LCQUERY">lcquery ${name} "${description}" 
 -&gt; ${realizes:CrossReference(ConceptualCompositeQuery.realizes)}{
	isUnion
	${cursor}
 };
 </template>

<template id = "26" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalDataModel" deleted="false" description="A LogicalDataModel is a container for LDM Elements" enabled="true" name="LDM">ldm ${name}  "${description}" {
	${cursor}
}</template>

<template id = "27" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformLongDouble" deleted="false" description="A LongDouble is a real data type that represents an IEEE extended double precision floating- point number (having a signed fraction of at least 64 bits and an exponent of at least 15 bits)" enabled="true" name="LDOUBLE">ldouble ${name} "${description}" -&gt;
${realizes:CrossReference(LogicalElement.realizes)} ;
${cursor}
</template>

<template id = "28" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalEntity" deleted="false" description="A logical Entity “realizes” a conceptual Entity in terms of Measurements and other logical Entities. Since a logical Entity is built from logical Measurements, it is independent of any specific platform data representation. A logical Entity's composition hierarchy is consistent with the composition hierarchy of the conceptual Entity that it realizes. The logical Entity’s composed Entities realize one to one the conceptual Entity’s composed Entities; the logical Entity’s composed Measurements realize many to one the conceptual Entity’s composed Observables. A logical Entity “realizes” a conceptual Entity in terms of Measurements and other logical Entities. Since a logical Entity is built from logical Measurements, it is independent of any specific platform data representation. A logical Entity's composition hierarchy is consistent with the composition hierarchy of the conceptual Entity that it realizes. The logical Entity’s composed Entities realize one to one the conceptual Entity’s composed Entities; the logical Entity’s composed Measurements realize many to one the conceptual Entity’s composed Observables. " enabled="true" name="LENTITY">lentity ${name} "${description}" ${cursor} </template>

<template id = "29" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformLongLong" deleted="false" description=" A LongLong is an integer data type that represents integer values in the range –2^63 to (2^63 – 1). " enabled="true" name="LLONG">llong ${name} "${description}" -&gt; ${realizes:CrossReference(LogicalElement.realizes)} ;
${cursor}
</template>

<template id = "30" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformLong" deleted="false" description="A Long is an integer data type that represents integer values in the range –2^31 to (2^31 – 1)." enabled="true" name="LONG">long ${name} "${description}" -&gt; 
${realizes:CrossReference(LogicalElement.realizes)};
${cursor}
</template>

<template id = "31" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalQuery" deleted="false" description="A logical Query is a specification that defines the content of logical View as a set of logical Characteristics projected from a selected set of related logical Entities. The “specification” attribute captures the specification of a Query as defined by the Query grammar." enabled="true" name="LQUERY">lquery ${name} "${description}" -&gt; ${realizes:CrossReference(ConceptualQuery.realizes)}{
	spec: "${specification}"
};
${cursor}
 </template>

<template id = "32" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalUnit" deleted="false" description="A Unit is a defined magnitude of quantity used as a standard for measurement." enabled="true" name="LUNIT">lunit ${name} "${description}" ;
${cursor}
</template>

<template id = "33" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalMeasurementConversion" deleted="false" description="A MeasurementConversion is a relationship between two Measurements that describes how to transform measured quantities between those Measurements. The conversion is captured as a set of equations in the “equation” attribute. The specific format of “equation” is undefined. The loss introduced by the conversion equations is captured in the “conversionLossDescription” attribute. The specific format of “conversionLossDescription” is undefined." enabled="true" name="MC">mc ${name} "${description}" {
	 ${source:CrossReference(LogicalMeasurementSystem.source)} -&gt; 
	 ${destination:CrossReference(LogicalMeasurementSystem.destination)}
	 eqn: [
	 	${cursor}
	 ]
	 loss: "${conversionLossDescription}"
};
</template>

<template id = "34" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalMeasurement" deleted="false" description="A Measurement realizes an Observable as a set of quantities that can be recorded for each axis of a MeasurementSystem. A Measurement contains the specific implementation details optionally including an override of the default ValueType and Unit for each axis as well as the constraints over that space for which the MeasurementSystem is valid." enabled="true" name="MEAS">meas ${name} "${description}" -&gt; 
${realizes:CrossReference(ConceptualObservable.realizes)}{
	${cursor}
}
</template>

<template id = "35" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalMeasurementSystemAxis" deleted="false" description=" A MeasurementSystemAxis establishes additional properties for a CoordinateSystemAxis including units and value types." enabled="true" name="MSA">msa ${name} "${description}" { 
	axis: ${axis:CrossReference(LogicalCoordinateSystemAxis.axis)}
	vtu: [
	${cursor}
	]			
	};
</template>

<template id = "36" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalMeasurementAxis" deleted="false" description="A MeasurementAxis optionally establishes constraints for a MeasurementSystemAxis and may optionally override its default units and value types." enabled="true" name="MSAXIS">msaxis ${name} "${description}" ${cursor} </template>

<template id = "37" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalMeasurementSystemConversion" deleted="false" description=" A MeasurementSystemConversion is a relationship between two MeasurementSystems that describes how to transform measured quantities between those MeasurementSystems. The conversion is captured as a set of equations in the “equation” attribute. The specific format of “equation” is undefined. The loss introduced by the conversion equations is captured in the “conversionLossDescription” attribute. The specific format of “conversionLossDescription” is undefined." enabled="true" name="MSC">msc ${name} "${description}" { 
		${source:CrossReference(LogicalMeasurementSystem.source)
		} -&gt; ${destination:CrossReference(LogicalMeasurementSystem.destination)}
		eqn: [
		${cursor}
		]
		};</template>
		
<template id = "38" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalMeasurementSystem" deleted="false" description="A MeasurementSystem relates a CoordinateSystem to an origin and orientation for the purpose of establishing a common basis for describing points in an N-dimensional space. Defining a MeasurementSystem establishes additional properties of the CoordinateSystem including units and value types for each axis, and a set of reference points that can be used to establish an origin and indicate the direction of each axis." enabled="true" name="MSYS">msys ${name} "${description}" { 
	msaxis: [
	${cursor}
	]
	};
	 
</template>

<template id = "39" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalNatural" deleted="false" description="A Natural is a value type representing the non-negative integers." enabled="true" name="NAT">nat ${name} "${description}" ;
${cursor}
</template>

<template id = "40" autoinsert="true" context="com.epistimis.uddl.Uddl.ConceptualObservable" deleted="false" description="An Observable is something that can be observed but not further characterized, and is typically quantified through measurements of the physical world. An observable is independent of any specific data representation, units, or reference frame. For example, “length” may be thought of as an observable in that it can be measured, but at the conceptual level the nature of the measurement is not specified." enabled="true" name="OBSERVABLE">observable ${name} "${description}" ;
${cursor}
</template>

<template id = "41" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformOctet" deleted="false" description="An Octet is an 8-bit quantity that is guaranteed not to undergo any conversion during transfer between systems." enabled="true" name="OCTET">octet ${name}	"${description}" -&gt; 
${realizes:CrossReference(LogicalElement.realizes)} ;
${cursor}
</template>

<template id = "42" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformAssociation" deleted="false" description=" A platform Association represents a relationship between two or more platform Entities. The platform Entities participating in the platform Association may be specified locally or in its generalized types. In addition, there may be one or more platform ComposableElements that characterize the relationship. Platform Associations are platform Entities that may also participate in other platform Associations." enabled="true" name="PASSOC">passoc ${name} "${description}" :
${specializes:CrossReference(PlatformEntity.specializes)}{
	${cursor}
} </template>

<template id = "43" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformDataModel" deleted="false" description="A PlatformDataModel is a container for platform Data Model elements." enabled="true" name="PDM">pdm ${name} "${description}" {
	${cursor}
}</template>

<template id = "44" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformEntity" deleted="false" description="A platform Entity “realizes” a logical Entity in terms of PhysicalDataTypes and other platform Entities composed of PhysicalDataTypes. A platform Entity’s composition hierarchy is consistent with the composition hierarchy of the logical Entity that it realizes. The platform Entity’s composed Entities realize one to one the logical Entity’s composed Entities; the platform Entity’s composed PhysicalDataTypes realize many to one the logical Entity’s composed Measurements." enabled="true" name="PENTITY">pentity ${name} "${description}": ${specializes:CrossReference(PlatformEntity.specializes)} -&gt; ${realizes:CrossReference(LogicalEntity.realizes)}{
	${cursor}
} </template>

<template id = "45" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalReal" deleted="false" description="A Real is a value type representing real numbers." enabled="true" name="REAL">real	${name} "${description}";
${cursor}
</template>

<template id = "60" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalNonNegativeReal" deleted="false" description="A NonNegativeReal is a value type representing non-negative real numbers." enabled="true" name="REAL+">real+	${name} "${description}" ;
${cursor}
</template>

<template id = "61" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalRegularExpressionConstraint" deleted="false" description="A RegularExpressionConstraint specifies a defined set of meaningful values for a String in the form of a regular expression." enabled="true" name="REC">rec ${name} [	 "${expression}"  ] "${description}" ;
${cursor}
</template>

<template id ="62" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalRealRangeConstraint" deleted="false" description="A RealRangeConstraint specifies a defined range of meaningful values for a Real or NonNegativeReal. The “upperBound” is greater than or equal to the “lowerBound”." enabled="true" name="RRC">rrc ${name}(
	[${lowerBound} : ${upperBound} ] )
	"${description}" ;

	${cursor}

 </template>



<template id = "47" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformShort" deleted="false" description=" A Short is an integer data type that represents integer values in the range –2^15 to (2^15 – 1)." enabled="true" name="SHORT">short ${name} "${description}"  -&gt; ${realizes:CrossReference(LogicalElement.realizes)};
${cursor}
</template>

<template id = "48" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalStandardMeasurementSystem" deleted="false" description="A StandardMeasurementSystem is used to represent an open, referenced measurement system without requiring the detailed modeling of the measurement system. The reference should be unambiguous and allows for full comprehension of the underlying measurement system." enabled="true" name="SMSYS">smsys ${name} "${description}" { 
	refStd: "${referenceStandard}"
};
${cursor}
</template>

<template id = "49" autoinsert="true" context="com.epistimis.uddl.Uddl.LogicalString" deleted="false" description="A String is a value type that represents a variable length sequence of characters." enabled="true" name="STR">str ${name} "${description}" ;
${cursor}
</template>

<template id = "50" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformString" deleted="false" description="A String is a data type that represents a variable length sequence of Char (all 8-bit quantities except NULL). The length is a non-negative integer, and is available at run-time." enabled="true" name="STRING">string ${name} "${description}" -&gt;${realizes:CrossReference(LogicalElement.realizes)};
${cursor}
;</template>

<template id = "85" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformStruct" deleted="false" description=" A platform Struct is a structured realization of a logical AbstractMeasurement. It is composed of PlatformDataTypes (i.e., Primitives and other Structs composed of Primitives). A platform Struct’s composition hierarchy is consistent with the composition hierarchy of the logical AbstractMeasurement that it realizes." enabled="true" name="STRUCT">struct ${name} "${description}" -&gt; ${realizes:CrossReference(LogicalElement.realizes)}{
	${cursor}
}
</template>

<template id = "51" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformULongLong" deleted="false" description="A ULongLong is an integer data type that represents integer values in the range 0 to (2^64 – 1)." enabled="true" name="ULLONG">ullong ${name} "${description}" -&gt; ${realizes:CrossReference(LogicalElement.realizes)};
${cursor}
</template>

<template id = "52" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformULong" deleted="false" description="A ULong is an integer data type that represents integer values in the range 0 to (2^32 – 1). " enabled="true" name="ULONG">ulong ${name} "${description}" -&gt;  ${realizes:CrossReference(LogicalElement.realizes)};
${cursor} 
</template>

<template id = "53" autoinsert="true" context="com.epistimis.uddl.Uddl.PlatformUShort" deleted="false" description="A UShort is an integer data type that represents integer values in the range 0 to (2^16 – 1)." enabled="true" name="USHORT">ushort ${name}	"${description}" -&gt; ${realizes:CrossReference(LogicalElement.realizes)} ;
${cursor}
 </template>



</templates>